{
  "name": "Handyfinder",
  "tagline": "A handy finder is tiny search program working on desktop to support multiple type of files.",
  "body": "# handyfinder\r\n\r\n[![Build Status](https://travis-ci.org/qwefgh90/handyfinder.svg?branch=master)](https://travis-ci.org/qwefgh90/handyfinder)\r\n\r\nA handy finder is tiny search program working on desktop to support multiple type of files\r\n\r\n# Downloading\r\n\r\n- You can download released versions from:  https://github.com/qwefgh90/handyfinder/releases\r\n\r\n# Usage\r\n\r\n1. In index page, add directories you want to index\r\n2. and then \"click run\"\r\n3. In search page, type keyword and search\r\n\r\n# Functionality\r\n- graphical interface like web\r\n- string indexing from files on file systems\r\n- after full indexing, update indexing when required or on scheduled time\r\n- file's meta data show (modified timestamp, filename, path, size)\r\n- opening dir and search result and so on...\r\n- management of index based on directory to be indexed recursively and extension filtering\r\n\r\n# System Feature\r\n- a application is designed with Angularjs 1.5.5, bootstrap 3.3.6, angular-ui-bootstrap 1.3.2, javafx webview\r\n- frontend is SPA (Single Page Application)\r\n- backend is Restful API with embedded tomcat\r\n- only local ip binding (127.0.0.1) \r\n- a lucene is used for indexing & search\r\n- JSearch is used for body text of document which tika supports\r\n\r\n# Future\r\n- internal auth token\r\n- usuful search condition\r\n- sorting and search in result\r\n\r\n# Run & Test\r\n\r\n- When you want to contribute, use STS\r\n- When you want to test, type \"mvn test\"\r\n- When you want to make native binary, type \"mvn jfx:native\" \r\n\r\n# Contribution\r\n\r\nWe would welcome any thoughts. When you find bugs, you can write issue and PR to \"develop\" branch.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}